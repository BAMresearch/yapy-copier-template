[project]
name = "{{ distribution_name }}"
description = {{ '{0!r}'.format(project_description).lstrip('ub')|replace("'",'"') }}
dynamic = ["version", "readme"]
license = "{{ license }}"
classifiers = [
  # complete classifier list: http://pypi.python.org/pypi?%3Aaction=list_classifiers
  "Development Status :: 4 - Beta",
  "Operating System :: Unix",
  "Operating System :: POSIX",
  "Operating System :: MacOS",
  "Operating System :: Microsoft :: Windows",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
{%- for item in python_versions %}
  "Programming Language :: Python :: {{ item }}",
{%- endfor %}
  "Programming Language :: Python :: Implementation :: CPython",
  "Framework :: Jupyter :: JupyterLab",
  "Topic :: Utilities",
  "Topic :: Scientific/Engineering",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
]
dependencies = [

]
{% for n in range(author_count|int) %}
[[project.authors]]
name = "{{ author_names.split(',')[n]|trim }}"
email = "{{ author_emails.split(',')[n]|trim }}"
{% endfor %}
[project.urls]
homepage = "{{ docs_url }}"
documentation = "{{ docs_url }}"
repository = "https://{{ repo_hosting }}/{{ repo_userorg }}/{{ repo_name }}"
changelog = "{{ docs_url }}/changelog.html"

[build-system]
requires = [
    "setuptools>=40.6",
    "wheel",
]
# check-manifest checks that, https://github.com/mgedmin/check-manifest/commit/c9df78
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]
include = ["{{ package_name }}*"]

[tool.setuptools.dynamic]
version = {attr = "{{ package_name }}.__version__"}
readme = {file = ["README.rst", "CHANGELOG.md"]}

[tool.coverage.report]
path = "coverage-report"  # see coverage.yml github action

# on version numbers: https://peps.python.org/pep-0440/
# and bottom of https://softwareengineering.stackexchange.com/a/151558
[tool.semantic_release]
#major_on_zero = false # no major release when current major version is zero
version_variables = [                        # version location
    "src/{{ package_name }}/__init__.py:__version__",
    "docs/conf.py:version",
]
[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "enh", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat", "enh"]
patch_tags = ["fix", "perf"]
[tool.semantic_release.changelog]
exclude_commit_patterns = ["chore", ".*\\bGHA\\b.*", ".*\\b[gG][hH] actions?\\b.*"]
[tool.semantic_release.publish]
upload_to_vcs_release = false

[tool.black]
line-length = 100
preview = true

[tool.isort]
profile = "black"
line_length = 100
group_by_package = true
known_first_party = "{{ package_name }}"
ensure_newline_before_comments = true
extend_skip = ["ci/templates", ".ipynb_checkpoints"]

[tool.docformatter]
recursive = true
wrap-summaries = 100
wrap-descriptions = 100
